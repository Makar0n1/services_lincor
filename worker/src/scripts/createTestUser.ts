import { initDatabase } from '../config/database';
import { UserModel } from '../models/User';
import dotenv from 'dotenv';

dotenv.config({ path: '../../.env' });

async function createTestUser() {
  try {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    console.log('Initializing database...');
    await initDatabase();
    console.log('Database initialized successfully');

    // –î–∞–Ω–Ω—ã–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const testUserData = {
      email: 'admin@linkchecker.com',
      username: 'admin',
      password: 'admin123',
      subscriptionPlan: 'enterprise' as const
    };

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const existingUser = await UserModel.findByEmail(testUserData.email);
    if (existingUser) {
      console.log('Test user already exists');
      console.log('Email:', existingUser.email);
      console.log('Username:', existingUser.username);
      console.log('Plan:', existingUser.subscription_plan);
      return;
    }

    // –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    console.log('Creating test user...');
    const user = await UserModel.create({
      email: testUserData.email,
      username: testUserData.username,
      password: testUserData.password
    });

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–ª–∞–Ω–∞ –Ω–∞ Enterprise
    const updatedUser = await UserModel.updateSubscription(
      user.id,
      testUserData.subscriptionPlan,
      new Date(Date.now() + 365 * 24 * 60 * 60 * 1000) // 1 –≥–æ–¥
    );

    if (updatedUser) {
      console.log('‚úÖ Test user created successfully!');
      console.log('üìß Email:', updatedUser.email);
      console.log('üë§ Username:', updatedUser.username);
      console.log('üí≥ Plan:', updatedUser.subscription_plan);
      console.log('üìÖ Expires:', updatedUser.subscription_expires);
      console.log('');
      console.log('üîë Login credentials:');
      console.log('   Email: admin@linkchecker.com');
      console.log('   Password: admin123');
      console.log('');
      console.log('üöÄ You can now test all features with unlimited access!');
    } else {
      console.error('‚ùå Failed to update user subscription');
    }

  } catch (error) {
    console.error('‚ùå Error creating test user:', error);
  } finally {
    process.exit(0);
  }
}

// –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
createTestUser();
